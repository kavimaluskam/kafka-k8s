zookeeper:
  enabled: true
  servers: 3
  resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  #  limits:
  #   cpu: 100m
  #   memory: 128Mi
  #  requests:
  #   cpu: 100m
  #   memory: 128Mi
  heapOptions: "-Xms512M -Xmx512M"
  prometheus:
    ## JMX Exporter Configuration
    ## ref: https://github.com/prometheus/jmx_exporter
    jmx:
      enabled: true

kafka-broker:
  enabled: true
  brokers: 3
  resources: {}
  # Example configuration setup like AWS MSK
  configurationOverrides:
    "offsets.topic.replication.factor": "3"
    "default.replication.factor": "3"
    "min.insync.replicas": "2"
    "auto.create.topics.enable": "true"
    "num.io.threads": "8"
    "num.network.threads": "5"
    "num.partitions": "1"
    "num.replica.fetchers": "2"
    "replica.lag.time.max.ms": "30000"
    "socket.receive.buffer.bytes": "102400"
    "socket.request.max.bytes": "104857600"
    "socket.send.buffer.bytes": "102400"
    "unclean.leader.election.enable": "true"
    "zookeeper.session.timeout.ms": "18000"
  customEnv: {}
  heapOptions: "-Xms512M -Xmx512M"
  prometheus:
    ## JMX Exporter Configuration
    ## ref: https://github.com/prometheus/jmx_exporter
    jmx:
      enabled: true

schema-registry:
  enabled: true
  replicaCount: 1
  heapOptions: "-Xms512M -Xmx512M"
  resources: {}
  prometheus:
    ## JMX Exporter Configuration
    ## ref: https://github.com/prometheus/jmx_exporter
    jmx:
      enabled: true
  kafka:
    bootstrapServers: ""

kafka-rest:
  enabled: false
  # replicaCount: 1
  # heapOptions: "-Xms512M -Xmx512M"
  # resources: {}
  # zookeeper:
  #   url: ""
  # schema-registry:
  #   url: ""

kafka-connect:
  enabled: true
  replicaCount: 1
  configurationOverrides:
    "plugin.path": "/usr/share/java,/usr/share/confluent-hub-components"
    "key.converter": "io.confluent.connect.avro.AvroConverter"
    "value.converter": "io.confluent.connect.avro.AvroConverter"
    "key.converter.schemas.enable": "false"
    "value.converter.schemas.enable": "false"
    "internal.key.converter": "org.apache.kafka.connect.json.JsonConverter"
    "internal.value.converter": "org.apache.kafka.connect.json.JsonConverter"
    "config.storage.replication.factor": "3"
    "offset.storage.replication.factor": "3"
    "status.storage.replication.factor": "3"
  heapOptions: "-Xms512M -Xmx512M"
  customEnv: {}
  resources: {}
  kafka:
    bootstrapServers: ""
  schema-registry:
    url: ""

kafdrop:
  enabled: true
  replicaCount: 1
  heapOptions: "-Xms32M -Xmx64M"
  resources: {}
  kafka:
    bootstrapServers: ""
  schema-registry:
    url: ""
  kafka-connect:
    url: ""
  zookeeper:
    url: ""


kafka-connect-ui:
  enabled: true
  replicaCount: 1
  resources: {}
  kafka-connect:
    url: ""

schema-registry-ui:
  enabled: true
  replicaCount: 1
  resources: {}
  schema-registry:
    url: ""
